{
  "openapi": "3.0.0",
  "info": {
    "title": "TASK3 API Documentation",
    "version": "1.0.0",
    "description": "API documentation for TASK3 - A social media platform with user authentication and post management",
    "contact": {
      "name": "Bhavin Motka",
      "email": "support@task3.com"
    }
  },
  "servers": [
    {
      "url": "http://localhost:5000",
      "description": "Development server"
    }
  ],
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    },
    "schemas": {
      "User": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "description": "User ID"
          },
          "firstName": {
            "type": "string",
            "description": "User's first name"
          },
          "lastName": {
            "type": "string",
            "description": "User's last name"
          },
          "email": {
            "type": "string",
            "format": "email",
            "description": "User's email address"
          },
          "countryCode": {
            "type": "string",
            "description": "Country code for phone number"
          },
          "phoneNo": {
            "type": "string",
            "description": "User's phone number"
          },
          "DOB": {
            "type": "string",
            "format": "date",
            "description": "Date of birth"
          },
          "gender": {
            "type": "string",
            "enum": ["male", "female", "other"],
            "description": "User's gender"
          },
          "loginStatus": {
            "type": "string",
            "enum": ["online", "offline"],
            "description": "Current login status"
          },
          "status": {
            "type": "string",
            "enum": ["active", "inactive", "blocked"],
            "description": "Account status"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "Post": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "description": "Post ID"
          },
          "UserId": {
            "type": "string",
            "description": "ID of the user who created the post"
          },
          "Title": {
            "type": "string",
            "description": "Post title"
          },
          "Content": {
            "type": "string",
            "description": "Post content"
          },
          "Status": {
            "type": "string",
            "enum": ["Public", "Private"],
            "description": "Post visibility status"
          },
          "Likes": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Array of user IDs who liked the post"
          },
          "Reposts": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Array of user IDs who reposted"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "ApiResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "integer",
            "description": "HTTP status code"
          },
          "message": {
            "type": "string",
            "description": "Response message"
          },
          "data": {
            "type": "object",
            "description": "Response data"
          },
          "keyword": {
            "type": "string",
            "description": "Response keyword for localization"
          }
        }
      },
      "ErrorResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "integer",
            "description": "HTTP status code"
          },
          "keyword": {
            "type": "string",
            "description": "Error keyword"
          },
          "components": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Error components"
          }
        }
      }
    }
  },
  "security": [
    {
      "bearerAuth": []
    }
  ],
  "paths": {
    "/api/users/signup": {
      "post": {
        "tags": ["Authentication"],
        "summary": "User registration",
        "description": "Register a new user account",
        "security": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["firstName", "lastName", "email", "countryCode", "phoneNo", "password", "DOB", "gender"],
                "properties": {
                  "firstName": {
                    "type": "string",
                    "description": "User's first name"
                  },
                  "lastName": {
                    "type": "string",
                    "description": "User's last name"
                  },
                  "email": {
                    "type": "string",
                    "format": "email",
                    "description": "User's email address"
                  },
                  "countryCode": {
                    "type": "string",
                    "description": "Country code for phone number"
                  },
                  "phoneNo": {
                    "type": "string",
                    "description": "User's phone number"
                  },
                  "password": {
                    "type": "string",
                    "minLength": 6,
                    "description": "User's password (minimum 6 characters)"
                  },
                  "DOB": {
                    "type": "string",
                    "format": "date",
                    "description": "Date of birth"
                  },
                  "gender": {
                    "type": "string",
                    "enum": ["male", "female", "other"],
                    "description": "User's gender"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User registered successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              }
            }
          },
          "400": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "409": {
            "description": "User already exists",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/users/login": {
      "post": {
        "tags": ["Authentication"],
        "summary": "User login",
        "description": "Authenticate user and get access token",
        "security": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["email", "password", "phoneNo"],
                "properties": {
                  "email": {
                    "type": "string",
                    "format": "email",
                    "description": "User's email address"
                  },
                  "password": {
                    "type": "string",
                    "minLength": 6,
                    "description": "User's password"
                  },
                  "phoneNo": {
                    "type": "string",
                    "description": "User's phone number"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Login successful",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ApiResponse"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "object",
                          "properties": {
                            "token": {
                              "type": "string",
                              "description": "JWT access token"
                            },
                            "user": {
                              "$ref": "#/components/schemas/User"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/users/logout": {
      "post": {
        "tags": ["Authentication"],
        "summary": "User logout",
        "description": "Logout user and invalidate token",
        "responses": {
          "200": {
            "description": "Logout successful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Invalid token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/users/userProfile": {
      "get": {
        "tags": ["User Profile"],
        "summary": "Get user profile",
        "description": "Retrieve current user's profile information",
        "responses": {
          "200": {
            "description": "Profile retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ApiResponse"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/User"
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Invalid token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/users/profileUpdate": {
      "post": {
        "tags": ["User Profile"],
        "summary": "Update user profile",
        "description": "Update current user's profile information",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["firstName", "lastName", "email", "countryCode", "phoneNo", "DOB", "gender"],
                "properties": {
                  "firstName": {
                    "type": "string",
                    "description": "User's first name"
                  },
                  "lastName": {
                    "type": "string",
                    "description": "User's last name"
                  },
                  "email": {
                    "type": "string",
                    "format": "email",
                    "description": "User's email address"
                  },
                  "countryCode": {
                    "type": "string",
                    "description": "Country code for phone number"
                  },
                  "phoneNo": {
                    "type": "string",
                    "description": "User's phone number"
                  },
                  "DOB": {
                    "type": "string",
                    "format": "date",
                    "description": "Date of birth"
                  },
                  "gender": {
                    "type": "string",
                    "enum": ["male", "female", "other"],
                    "description": "User's gender"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Profile updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              }
            }
          },
          "400": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Invalid token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/users/softDelete": {
      "post": {
        "tags": ["User Management"],
        "summary": "Soft delete user account",
        "description": "Mark user account as deleted (soft delete)",
        "responses": {
          "200": {
            "description": "Account soft deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Invalid token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/users/p_delete": {
      "post": {
        "tags": ["User Management"],
        "summary": "Permanently delete user account",
        "description": "Permanently delete user account and all associated data",
        "responses": {
          "200": {
            "description": "Account permanently deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Invalid token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/posts/createPost": {
      "post": {
        "tags": ["Posts"],
        "summary": "Create a new post",
        "description": "Create a new post with title and content",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["Title", "Content"],
                "properties": {
                  "Title": {
                    "type": "string",
                    "description": "Post title"
                  },
                  "Content": {
                    "type": "string",
                    "description": "Post content"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Post created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ApiResponse"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/Post"
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Invalid token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/posts/updatePost": {
      "post": {
        "tags": ["Posts"],
        "summary": "Update an existing post",
        "description": "Update an existing post by ID",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Post ID to update (encrypted)"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["Title", "Content"],
                "properties": {
                  "Title": {
                    "type": "string",
                    "description": "Updated post title"
                  },
                  "Content": {
                    "type": "string",
                    "description": "Updated post content"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Post updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              }
            }
          },
          "400": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Invalid token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Post not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/posts/softDelete": {
      "post": {
        "tags": ["Posts"],
        "summary": "Soft delete a post",
        "description": "Mark a post as deleted (soft delete)",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Post ID to soft delete (encrypted)"
          }
        ],
        "responses": {
          "200": {
            "description": "Post soft deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Invalid token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Post not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/posts/p_delete": {
      "post": {
        "tags": ["Posts"],
        "summary": "Permanently delete a post",
        "description": "Permanently delete a post and all associated data",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Post ID to permanently delete (encrypted)"
          }
        ],
        "responses": {
          "200": {
            "description": "Post permanently deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Invalid token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Post not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/posts/getAllPost": {
      "get": {
        "tags": ["Posts"],
        "summary": "Get all posts",
        "description": "Retrieve all posts with pagination",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 1
            },
            "description": "Page number for pagination"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 10
            },
            "description": "Number of posts per page"
          }
        ],
        "responses": {
          "200": {
            "description": "Posts retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ApiResponse"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/Post"
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Invalid token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/posts/getMyPost": {
      "get": {
        "tags": ["Posts"],
        "summary": "Get current user's posts",
        "description": "Retrieve posts created by the current user with pagination",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 1
            },
            "description": "Page number for pagination"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 10
            },
            "description": "Number of posts per page"
          }
        ],
        "responses": {
          "200": {
            "description": "User's posts retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ApiResponse"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/Post"
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Invalid token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/posts/getOtherPost": {
      "get": {
        "tags": ["Posts"],
        "summary": "Get other users' posts",
        "description": "Retrieve posts created by other users with pagination",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 1
            },
            "description": "Page number for pagination"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 10
            },
            "description": "Number of posts per page"
          }
        ],
        "responses": {
          "200": {
            "description": "Other users' posts retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ApiResponse"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/Post"
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Invalid token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/posts/likeDislike": {
      "get": {
        "tags": ["Post Interactions"],
        "summary": "Like or dislike a post",
        "description": "Toggle like/dislike status for a post",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Post ID to like/dislike (encrypted)"
          }
        ],
        "responses": {
          "200": {
            "description": "Like/dislike action completed successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Invalid token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Post not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/posts/rePost": {
      "post": {
        "tags": ["Post Interactions"],
        "summary": "Repost a post",
        "description": "Share/repost an existing post",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Post ID to repost (encrypted)"
          }
        ],
        "responses": {
          "200": {
            "description": "Post reposted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Invalid token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Post not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    }
  }
}
